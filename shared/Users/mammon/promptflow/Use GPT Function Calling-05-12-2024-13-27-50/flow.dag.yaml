id: use_functions_with_chat_models
name: Use Functions with Chat Models
inputs:
  chat_history:
    type: list
    default:
    - inputs:
        question: What is the weather like in Boston?
      outputs:
        answer: '{"forecast":["sunny","windy"],"location":"Boston","temperature":"72","unit":"fahrenheit"}'
        llm_output:
          content: null
          function_call:
            name: get_current_weather
            arguments: |-
              {
                "location": "Boston"
              }
          role: assistant
    is_chat_input: false
    is_chat_history: true
  question:
    type: string
    default: How about London next week?
    is_chat_input: true
outputs:
  answer:
    type: string
    reference: ${run_function.output}
    is_chat_output: true
  llm_output:
    type: object
    reference: ${use_functions_with_chat_models.output}
nodes:
- name: run_function
  type: python
  source:
    type: code
    path: run_function.py
  inputs:
    response_message: ${use_functions_with_chat_models.output}
  activate:
    when: ${use_functions_with_chat_models.output}
    is: true
  use_variants: false
- name: use_functions_with_chat_models
  use_variants: true
node_variants:
  use_functions_with_chat_models:
    default_variant_id: variant_0
    variants:
      variant_0:
        node:
          name: use_functions_with_chat_models
          type: llm
          source:
            type: code
            path: use_functions_with_chat_models.jinja2
          inputs:
            deployment_name: gpt-4
            temperature: 0.7
            top_p: 1
            max_tokens: 200
            response_format:
              type: json_object
            presence_penalty: 0
            frequency_penalty: 0
            functions:
            - name: get_current_weather
              description: Get the current weather in a given location
              parameters:
                type: object
                properties:
                  location:
                    type: string
                    description: The city and state, e.g. San Francisco, CA
                  unit:
                    type: string
                    enum:
                    - celsius
                    - fahrenheit
                required:
                - location
            - name: get_n_day_weather_forecast
              description: Get an N-day weather forecast
              parameters:
                type: object
                properties:
                  location:
                    type: string
                    description: The city and state, e.g. San Francisco, CA
                  format:
                    type: string
                    enum:
                    - celsius
                    - fahrenheit
                    description: The temperature unit to use. Infer this from the users location.
                  num_days:
                    type: integer
                    description: The number of days to forecast
                required:
                - location
                - format
                - num_days
            function_call: auto
            chat_history: ${inputs.chat_history}
            question: ${inputs.question}
          provider: AzureOpenAI
          connection: watsonx
          api: chat
          module: promptflow.tools.aoai
      variant_1:
        node:
          name: use_functions_with_chat_models
          type: llm
          source:
            type: code
            path: use_functions_with_chat_models__variant_1.jinja2
          inputs:
            deployment_name: gpt-4
            temperature: 0.7
            top_p: 1
            max_tokens: 200
            presence_penalty: 0
            frequency_penalty: 0
            functions:
            - name: get_current_weather
              description: Get the current weather in a given location
              parameters:
                type: object
                properties:
                  location:
                    type: string
                    description: The city and state, e.g. San Francisco, CA
                  unit:
                    type: string
                    enum:
                    - celsius
                    - fahrenheit
                required:
                - location
            - name: get_n_day_weather_forecast
              description: Get an N-day weather forecast
              parameters:
                type: object
                properties:
                  location:
                    type: string
                    description: The city and state, e.g. San Francisco, CA
                  format:
                    type: string
                    enum:
                    - celsius
                    - fahrenheit
                    description: The temperature unit to use. Infer this from the users location.
                  num_days:
                    type: integer
                    description: The number of days to forecast
                required:
                - location
                - format
                - num_days
            function_call: auto
            chat_history: ${inputs.chat_history}
            question: ${inputs.question}
          provider: AzureOpenAI
          connection: watsonx
          api: chat
          module: promptflow.tools.aoai
environment:
  python_requirements_txt: requirements.txt
